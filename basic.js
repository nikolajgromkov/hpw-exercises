/*
–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
–û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ –∑–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–µ–µ —Å–≤–æ–µ –∏–º—è –∫–∞–∫ –ª–∏—Ç–µ—Ä–∞–ª —Å—Ç—Ä–æ–∫–∏.
–û–±—ä—è–≤–∏—Ç–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –∏ –∑–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–µ–µ –≥–æ–¥ —Å–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –∫–∞–∫ –ª–∏—Ç–µ—Ä–∞–ª —á–∏—Å–ª–∞.
–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–º–µ–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç: name.
*/
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var firstname = '–û–ª–µ–≥';
var dateyear = 1886;
var greeting = function (firstname) { return ("\u041F\u0440\u0438\u0432\u0435\u0442, " + firstname); };
greeting(firstname);
/*
–¶–∏–∫–ª—ã
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é range(start: number, end: number): array –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–¥–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [15, 30] –≤–∫–ª—é—á–∞—è –∫—Ä–∞–π–Ω–∏–µ —á–∏—Å–ª–∞.
*/
var rangeMap = function (start, end) {
    return __spreadArray([], Array(end - start + 1), true).map(function (_, i) { return start + i; });
};
var rangeFor = function (start, end) {
    var array = [];
    for (start; start <= end; start++)
        array.push(start);
    return array;
};
var rangeRecursive = function (start, end) {
    if (start === end)
        return [start];
    return __spreadArray([start], rangeRecursive(start + 1, end), true);
};
var perfomanceTest = function (tests, limit, mark, f) {
    console.time(mark);
    for (var i = 0; i < tests; i++) {
        f(1, limit);
    }
    console.timeEnd(mark);
};
console.log('Perfomance test:');
perfomanceTest(5, 100, 'map', rangeMap);
perfomanceTest(5, 100, 'for', rangeFor);
perfomanceTest(5, 100, 'recursive', rangeRecursive);
/*
–í–æ—Ç —Ç–∞–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:
rangeMap: 0.428ms üò¨
rangeFor: 0.296ms üòç
rangeRecursive: 3.029ms ‚ò†Ô∏è
*/
/*
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é rangeOdd(start: number, end: number): array –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–¥–∞–µ—Ç –º–∞—Å—Å–∏–≤ –Ω–µ—á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [15, 30] –≤–∫–ª—é—á–∞—è –∫—Ä–∞–π–Ω–∏–µ —á–∏—Å–ª–∞.
*/
var rangeOdd = function (start, end) {
    var array = [];
    for (var i = start; i <= end; i++)
        if (i % 2 == 0)
            array.push(i);
    return array;
};
console.log(rangeOdd(10, 100));
/*
–í–ª–æ–∂–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π –≤ —Ü–∏–∫–ª–µ
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é average —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–æ–π average(a: number, b: number): number –≤—ã—á–∏—Å–ª—è—é—â—É—é —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é square —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–æ–π square(x: number): number –≤—ã—á–∏—Å–ª—è—é—â—É—é –∫–≤–∞–¥—Ä–∞—Ç —Å–≤–æ–µ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é cube —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–æ–π cube(x: number): number –≤—ã—á–∏—Å–ª—è—é—â—É—é –∫—É–± —Å–≤–æ–µ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.
–í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ square –∏ cube –≤ —Ü–∏–∫–ª–µ –æ—Ç 0 –¥–æ 9, –≤—ã—á–∏—Å–ª—è—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –∫–≤–∞–¥—Ä–∞—Ç –∏ –∫—É–± –æ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ü–∏–∫–ª–∞. –ü–µ—Ä–µ–¥–∞–π—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç –∏ –∫—É–± –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é average. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–ª–æ–∂–∏—Ç–µ –≤ –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∏—Ç–µ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ calculate.
*/
var average = function (a, b) { return (a + b) / 2; };
var square = function (x) { return Math.pow(x, 2); };
var cube = function (x) { return Math.pow(x, 3); };
var calculate = function () {
    var results = [];
    for (var x = 0; x < 9; x++)
        results.push(average(square(x), cube(x)));
    return results;
};
console.dir(calculate());
/*
–í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ fn (—Å–º. –∑–∞–≥–æ—Ç–æ–≤–∫—É: 7-objects.js)
–°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç —Å –æ–¥–Ω–∏–º –ø–æ–ª–µ–º name –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É.
–°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç —Å –æ–¥–Ω–∏–º –ø–æ–ª–µ–º name –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é.
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å –ø–æ–ª–µ name —É –æ–±–æ–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏—Å–≤–æ–∏—Ç—å –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç –≤ –æ–±–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞.
–û–±—ä—è—Å–Ω–∏—Ç–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ–¥–∞ –∏ –æ—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–π –∫–æ–¥.
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é createUser —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–æ–π createUser(name: string, city: string): object. –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞: createUser('Marcus Aurelius', 'Roma') —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –æ–±—ä–µ–∫—Ç { name: 'Marcus Aurelius', city: 'Roma' }
*/
var kirill = { name: 'Kirill' };
var slava = { name: 'Slava' };
kirill.name = 'Slava';
slava.name = 'Kirill';
slava = { name: 'Misha' };
console.dir({ kirill: kirill });
console.dir({ slava: slava });
var createUser = function (name, city) { return ({ name: name, city: city }); };
console.dir(createUser('Ksusha', 'Irkutsk'));
/*
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É—é –∫–Ω–∏–≥—É –Ω–∞ –º–∞—Å—Å–∏–≤–µ –æ–±—ä–µ–∫—Ç–æ–≤.
–û–±—ä—è–≤–∏—Ç–µ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –¥–≤—É–º—è –ø–æ–ª—è–º–∏: name –∏ phone –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–∏. –ü—Ä–∏–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞: { name: 'Marcus Aurelius', phone: '+380445554433' } –∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤, —á—Ç–æ–± –±—ã–ª–æ –Ω–∞ —á–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å.
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é findPhoneByName —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–æ–π findPhoneByName(name: string): string. –ü—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–±—ä–µ–∫—Ç, –≥–¥–µ –ø–æ–ª–µ name —Ä–∞–≤–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç—É name –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ –æ–±—ä–µ–∫—Ç–∞. –î–ª—è –ø–æ–∏—Å–∫–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ü–∏–∫–ª–æ–º for. A. –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É—é –∫–Ω–∏–≥—É –Ω–∞ —Ö–µ—à-—Ç–∞–±–ª–∏—Ü–∞—Ö, —Ç.–µ. —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞—Ö (–æ–±—ä–µ–∫—Ç–∞—Ö).
–ó–∞–¥–∞–π—Ç–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ (–æ–±—ä–µ–∫—Ç) —Å –∫–ª—é—á–∞–º–∏ —Ä–∞–≤–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ–ª—è name (–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞) –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Ä–∞–≤–Ω—ã–º–∏ –ø–æ–ª—é phone.
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é findPhoneByName —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–æ–π findPhoneByName(name: string): string –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Ö–µ—à–µ –ø–æ –∏–º–µ–Ω–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ hash[key] –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
*/
var book = [
    { name: 'Ksenia', phone: '+79000000000' },
    { name: 'Nikolas', phone: '+79025700000' },
    { name: 'Bert', phone: '+79500007722' },
    { name: 'Dmitriy', phone: '+79995670000' },
];
var findPhoneByName = function (name) {
    for (var _i = 0, book_1 = book; _i < book_1.length; _i++) {
        var person = book_1[_i];
        if (name === person.name)
            return person.phone;
    }
};
console.dir(findPhoneByName('Bert'));
var book2 = {
    'Ksenia': '+79000000000',
    'Nikolas': '+79025700000',
    'Bert': '+79500007722',
    'Dmitriy': '+79995670000'
};
var findPhoneByHashName = function (name) { return book2[name] ? book2[name] : undefined; };
console.dir(findPhoneByHashName('Berta'));
